name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE: helloworld

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}:latest

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Output metadata
        run: echo "Metadata:${{ steps.meta.outputs }}"

    outputs:
      repo_digest: ${{ steps.push.outputs.digest }}

  terraform:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read
      id-token: write
    defaults:
      run:
        working-directory: terraform/tf-azure
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    environment:
      name: UAT
      url: ${{ format('https://{0}-aci-helloworld-dns.australiaeast.azurecontainer.io', 'UAT') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        
      - name: Apply Terraform
        run: terraform apply -auto-approve -lock-timeout=5m -var "docker_registry_address=${{ env.DOCKER_REGISTRY }}" -var "docker_registry_username=${{ github.actor }}" -var "docker_image_name=${{ env.DOCKER_IMAGE }}" -var "github_owner=${{ github.repository_owner }}" -var "github_token=${{ github.token }}" -var "environment_name=UAT"